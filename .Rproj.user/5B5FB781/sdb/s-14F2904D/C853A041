{
    "contents" : "#' <Add Title>\n#'\n#' <Add Description>\n#'\n#' @import htmlwidgets\n#'\n#' @export\ndmaps <- function(type = \"depto\", data, opts = NULL,width = '100%', height = '100%',...) {\n\n  opts <- getOpts(opts)\n  defaultFill <- opts$defaultFill\n  palette <- opts$palette\n\n  d <- getData(\"depto\",data, defaultFill = defaultFill, palette = palette)\n\n  settings <- opts\n  settings$mapType <- type\n\n  # pass the data and settings using 'x'\n  x <- list(\n    data = d,\n    settings = settings\n  )\n\n  htmlwidgets::createWidget(\n    name = \"dmaps\",\n    x,\n    width = width,\n    height = height,\n    package = 'dmaps',\n    sizingPolicy = htmlwidgets::sizingPolicy(\n      viewer.padding = 0,\n      browser.padding = 0,\n      browser.fill = TRUE\n    )\n  )\n}\n\n#' Widget output function for use in Shiny\n#'\n#' @export\ndmapsOutput <- function(outputId, width = '100%', height = '500px'){\n  shinyWidgetOutput(outputId, 'dmaps', width, height, package = 'dmaps')\n}\n\n#' Widget render function for use in Shiny\n#'\n#' @export\nrenderDmaps <- function(expr, env = parent.frame(), quoted = FALSE) {\n  if (!quoted) { expr <- substitute(expr) } # force quoted\n  shinyRenderWidget(expr, dmapsOutput, env, quoted = TRUE)\n}\n",
    "created" : 1435758050560.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3975266660",
    "id" : "C853A041",
    "lastKnownWriteTime" : 1435781955,
    "path" : "~/jprepo/dmaps/R/dmaps.R",
    "project_path" : "R/dmaps.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}